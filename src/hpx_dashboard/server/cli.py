# -*- coding: utf-8 -*-
#
# HPX - dashboard
#
# Copyright (c) 2020 - ETH Zurich
# All rights reserved
#
# SPDX-License-Identifier: BSD-3-Clause


"""Main entry for the hpx dashboard server
"""

import argparse
from queue import Queue
import sys
import threading

from tornado.ioloop import IOLoop

from ..common.logger import Logger
from .tcp_listener import TCP_Server, handle_response
from .app import bk_server


def args_parse(argv):
    """Parses the argument list"""
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "-pl",
        "--listen-port",
        dest="listen_port",
        help="port on which the server listens for the incoming parsed data "
        "generated by the hpx-dashboard agent.",
        default=5267,
    )

    parser.add_argument(
        "-pb",
        "--bokeh-port",
        dest="bokeh_port",
        help="port on which the server starts the Bokeh server for the live plotting.",
        default=5006,
    )

    return parser.parse_args(argv)


def server(argv):
    """Starts the bokeh server and the TCP listener"""

    logger = Logger()
    opt = args_parse(sys.argv[1:])

    server = bk_server(io_loop=IOLoop().current(), port=int(opt.bokeh_port))
    server.start()

    queue = Queue()
    tcp_server = TCP_Server(queue=queue)
    tcp_server.listen(opt.listen_port)
    tcp_thread = threading.Thread(target=lambda: handle_response(queue))
    tcp_thread.daemon = True
    tcp_thread.start()

    logger.info(f"Bokeh server started on http://localhost:{opt.bokeh_port}")
    server.io_loop.start()

    tcp_thread.join()


def main():
    server(sys.argv)
